/* Copyright (c) 2006, Sun Microsystems, Inc.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *     * Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Sun Microsystems, Inc. nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */
 
 options {
   JAVA_UNICODE_ESCAPE = true;
   FORCE_LA_CHECK=true;
   LOOKAHEAD=2;
}

PARSER_BEGIN(TemplateParser)
package dae.fxcreator.io.templates.parser;

/** ID lister. */
public class TemplateParser {
	StringBuffer output = new StringBuffer();
	
	public StringBuffer getOutput(){
		return output;
	}
	
	public String quoteString(String toQuote){
		return (char)0x22 + toQuote+(char)0x22;
	}
  /** Main entry point. */
  public static void main(String args[]) throws ParseException {
    TemplateParser parser = new TemplateParser(System.in);
    parser.Input();
  }

}

PARSER_END(TemplateParser)

SKIP :
{
  " "
| "\t"
| "\r"
| "\n"
}

TOKEN :{ 
	< InsertBegin: "<%=" >
|	<CodeEnd :"%>" > 
|   < CodeBegin : "<%" > 
}

TOKEN : /* IDENTIFIERS */
{
  < IDENTIFIER: <LETTER> (<LETTER>|<DIGIT>)* >
|
  < #LETTER:
      [
       "\u0024",
       "\u0041"-"\u005a",
       "\u005f",
       "\u0061"-"\u007a",
       "\u00c0"-"\u00d6",
       "\u00d8"-"\u00f6",
       "\u00f8"-"\u00ff",
       "\u0100"-"\u1fff",
       "\u3040"-"\u318f",
       "\u3300"-"\u337f",
       "\u3400"-"\u3d2d",
       "\u4e00"-"\u9fff",
       "\uf900"-"\ufaff"
      ]
  >
|
  < #DIGIT:
      [
       "\u0030"-"\u0039",
       "\u0660"-"\u0669",
       "\u06f0"-"\u06f9",
       "\u0966"-"\u096f",
       "\u09e6"-"\u09ef",
       "\u0a66"-"\u0a6f",
       "\u0ae6"-"\u0aef",
       "\u0b66"-"\u0b6f",
       "\u0be7"-"\u0bef",
       "\u0c66"-"\u0c6f",
       "\u0ce6"-"\u0cef",
       "\u0d66"-"\u0d6f",
       "\u0e50"-"\u0e59",
       "\u0ed0"-"\u0ed9",
       "\u1040"-"\u1049"
      ]
  >
}

TOKEN : /* SEPARATORS */
{
  < SEPARATOR: ["(",")","{","}","[","]",";",",",".","<",">","!","&","|","=","!","?","*","-","%",":","/","\"","\'"] >
}

/** Top level production. */
void Input() :
{
	Token t = null ;
}
{
	(
	InsertCode() 
	| Code()
	| t=<IDENTIFIER>{output.append(t.image+"\n");}
	| t=<SEPARATOR>{output.append(t.image+"\n");}
 	)*
}


void InsertCode() :
{
	// java code
	Token t = null;
}
{
	
  <InsertBegin> 
  ( 
  	t=<IDENTIFIER>{output.append(t.image+"\n");}
  	| t=<SEPARATOR>{output.append(t.image+"\n");}
)*
  <CodeEnd>
}

void Code() :
{
	// java code
	Token t = null;
}
{
	<CodeBegin> 
	 ( 
	  	t=<IDENTIFIER>{output.append("output.write("+quoteString(t.image)+");\n");}
	  	| t=<SEPARATOR>{output.append("output.write("+quoteString(t.image)+");\n");}
)*
	<CodeEnd>
}
